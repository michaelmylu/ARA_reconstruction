cmake_minimum_required (VERSION 3.1)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")
#set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "/home/local/ara/repositories/root_5.34/etc/cmake")
#message( STATUS "CMAKE_SOURCE_DIR:")
#message( STATUS ${CMAKE_SOURCE_DIR})
#include(FindROOT)
SET(CMAKE_CXX_STANDARD 11)

set(SQLITE3_HINT_INCLUDES "/net/local/ara/install_dir/utilities/include")
set(SQLITE3_HINT_LIBRARIES "/net/local/ara/install_dir/utilities/lib")

set(FFTW3_HINT_INCLUDES "/net/local/ara/install_dir/utilities/include")
set(FFTW3_HINT_LIBRARIES "/net/local/ara/install_dir/utilities/lib")

#Added by Lu
#set (CURRENT_WORK_DIR   "/data/user/mlu27/analysis/trunk")
set (CURRENT_WORK_DIR "/data/user/mlu27/analysis/tmp_for_git")
set (CLFFT_INCLUDE_DIR  "/data/user/mlu27/softwares/clFFT-2.2/src/include")
set (RADIOSPLINE_INCLUDE_DIR "/data/user/mlu27/softwares/radiospline/src/public")
set (PHOTOSPLINE_INCLUDE_DIR "/data/user/mlu27/softwares/radiospline/photospline/include")
#set (PHOTOSPLINE_INCLUDE_DIR "/data/user/mlu27/softwares/radiospline/photospline/public")
set (ARASIM_INCLUDE_DIR "/data/user/mlu27/analysis/tmp_for_git")
# Using I3_PORT CFITSIO
#set (CFITSIO_INCLUDE_DIR "/data/user/mlu27/tools/RHEL_6.0_amd64/include")
set (CFITSIO_INCLUDE_DIR "/cvmfs/icecube.opensciencegrid.org/standard/RHEL_6_x86_64/i3ports/include")
set (HEALPIX_INCLUDE_DIR "/data/user/mlu27/softwares/Healpix_3.20/src/cxx/generic_gcc/include")
set (HEALPIX_LIB_DIR "/data/user/mlu27/softwares/Healpix_3.20/src/cxx/generic_gcc/lib")
#

#Trying to use <chrono>
set (GCC_COVERAGE_COMPILE_FLAGS "-std=c++0x" )
set ( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}" )

project(AraRootAnalysis)

find_package(ROOT REQUIRED COMPONENTS MathMore Gui)

#message( STATUS ${ROOT_INCLUDE_DIR})
#message( STATUS "End of mess")
#include_directories(${ROOT_INCLUDE_DIRS} ${CURRENT_WORK_DIR})
#include (${ROOT_USE_FILE})

include_directories(${CURRENT_WORK_DIR})

#set(HEALPIX_DICT_INCLUDE_DIR ${HEALPIX_DICT_INCLUDE_DIR} ${CURRENT_WORK_DIR} ${HEALPIX_INCLUDE_DIR})
#ROOT_GENERATE_DICTIONARY_OLD(recoSettings_Dict.cxx recoSettings.h ${CURRENT_WORK_DIR} Linkdef.h)
ROOT_GENERATE_DICTIONARY(recoSettings.h linkdef_recoSettings.h recoSettings_Dict.cxx ${CURRENT_WORK_DIR})
ROOT_GENERATE_DICTIONARY(trackEngine.h linkdef_trackEngine.h trackEngine_Dict.cxx ${CURRENT_WORK_DIR})
#ROOT_GENERATE_DICTIONARY(Healpix_Onion.h linkdef.h Healpix_Onion_Dict.cxx "${HEALPIX_DICT_INCLUDE_DIR}")
ROOT_GENERATE_DICTIONARY(recoData.h linkdef_recoData.h recoData_Dict.cxx ${CURRENT_WORK_DIR})
add_library(recoSettings SHARED recoSettings.cxx recoSettings_Dict.cxx)
add_library(trackEngine SHARED trackEngine.cxx trackEngine_Dict.cxx)
#add_library(Healpix_Onion SHARED Healpix_Onion.cxx Healpix_Onion_Dict.cxx)
add_library(recoData SHARED recoData.cxx recoData_Dict.cxx)
target_link_libraries(recoSettings ${ROOT_LIBRARIES})
target_link_libraries(trackEngine ${ROOT_LIBRARIES})
#target_link_libraries(Healpix_Onion ${ROOT_LIBRARIES})
target_link_libraries(recoData ${ROOT_LIBRARIES})

find_package(libRootFftwWrapper REQUIRED)
find_package(FFTW REQUIRED)
find_package(sqlite3 REQUIRED)
find_package(zlib REQUIRED)
find_package(AraEvent REQUIRED)
find_package(AraDisplay REQUIRED)
find_package(AraVertex REQUIRED)
#Added by Lu
#find_package(clFFT REQUIRED PATHS /data/user/mlu27/softwares/clFFT-2.2/src/)

#if( clFFT_FOUND )
#   message( STATUS "clFFT is found" )
#else ( )
#   message( WARNING "clFFT is not found" )
#endif( )

add_library(calibrationTools calibrationTools.cxx)
add_library(calibrationToolsVs3 calibrationToolsVs3.cxx)
add_library(evProcessTools evProcessTools.cxx)
add_library(recoTools recoTools.cxx)
add_library(analysisTools analysisTools.cxx)
add_library(clFFT SHARED IMPORTED)
#add_library(recoSettings recoSettings.cxx)
add_library(Healpix_Onion Healpix_Onion.cxx)
set_property( TARGET clFFT PROPERTY IMPORTED_LOCATION /data/user/mlu27/softwares/clFFT-2.2/src/library/libclFFT.so )
add_library(radiospline SHARED IMPORTED)
set_property( TARGET radiospline PROPERTY IMPORTED_LOCATION
/data/user/mlu27/softwares/radiospline/build/radiospline-prefix/src/radiospline-build/libradiospline.so )
add_library(libAraSim STATIC IMPORTED)
set_property( TARGET libAraSim PROPERTY IMPORTED_LOCATION ${ARASIM_INCLUDE_DIR}/libAraSim.a)
add_library(libRootFftWrapper STATIC IMPORTED)
#set_property(TARGET libRootFftWrapper PROPERTY IMPORTED_LOCATION /home/local/ara/install_dir/AraRoot/trunk/lib/libRootFftwWrapper.so)
set_property(TARGET libRootFftWrapper PROPERTY IMPORTED_LOCATION /cvmfs/ara.opensciencegrid.org/trunk/centos7/build/lib/libRootFftwWrapper.so)
add_library(cfitsio STATIC IMPORTED)
set_property(TARGET cfitsio PROPERTY IMPORTED_LOCATION /cvmfs/icecube.opensciencegrid.org/py2-v2/RHEL_6_x86_64/lib/libcfitsio.so.2)
add_library(libTMVA SHARED IMPORTED)
set_property(TARGET libTMVA PROPERTY IMPORTED_LOCATION /cvmfs/ara.opensciencegrid.org/trunk/centos7/root_build/lib/libTMVA.so)

set(ExtraLibs ${ExtraLibs} calibrationToolsVs3 evProcessTools calibrationTools trackEngine recoTools OpenCL clFFT radiospline recoSettings Healpix_Onion libAraSim recoData libRootFftWrapper cfitsio libTMVA analysisTools ${ARAVERTEX_LIBRARIES})

add_library(healpix_cxx STATIC IMPORTED)
set_property( TARGET healpix_cxx PROPERTY IMPORTED_LOCATION ${HEALPIX_LIB_DIR}/libhealpix_cxx.a )
add_library(cxxsupport STATIC IMPORTED)
set_property( TARGET cxxsupport PROPERTY IMPORTED_LOCATION ${HEALPIX_LIB_DIR}/libcxxsupport.a )
add_library(fftpack STATIC IMPORTED)
set_property( TARGET fftpack PROPERTY IMPORTED_LOCATION ${HEALPIX_LIB_DIR}/libfftpack.a )
add_library(c_utils STATIC IMPORTED)
set_property( TARGET c_utils PROPERTY IMPORTED_LOCATION ${HEALPIX_LIB_DIR}/libc_utils.a )
add_library(sharp STATIC IMPORTED)
set_property( TARGET sharp PROPERTY IMPORTED_LOCATION ${HEALPIX_LIB_DIR}/libsharp.a )

# Using I3_PORT installed CFITSIO libs, presumably in LD_LIBRARY_PATH
#add_library(cfitsio STATIC IMPORTED)
#set_property( TARGET cfitsio PROPERTY IMPORTED_LOCATION /data/user/mlu27/tools/RHEL_6.0_amd64/lib/libcfitsio.a )

set(HealpixLibs ${HealpixLibs} healpix_cxx cxxsupport fftpack c_utils sharp )#cfitsio)

#add_library(libAraSim STATIC IMPORTED)
#set_property( TARGET libAraSim PROPERTY IMPORTED_LOCATION ${ARASIM_INCLUDE_DIR}/libAraSim.a)
#set(AraSimLibs ${AraSimLibs} libAraSim)

Set(INCLUDE_DIRECTORIES  ${ARAEVENT_INCLUDE_DIRS} ${LIBROOTFFTWWRAPPER_INCLUDE_DIRS} ${ROOT_INCLUDE_DIRS}
 ${CURRENT_WORK_DIR} ${CLFFT_INCLUDE_DIR} ${RADIOSPLINE_INCLUDE_DIR}
${PHOTOSPLINE_INCLUDE_DIR} ${CFITSIO_INCLUDE_DIR}
${HEALPIX_INCLUDE_DIR} ${ARASIM_INCLUDE_DIR})

include_directories( ${INCLUDE_DIRECTORIES} )

#EXECUTE_PROCESS(COMMAND rootcint -f dict_recoSettings.cxx -c ${CURRENT_WORK_DIR}/recoSettings.h ${CURRENT_WORK_DIR}/linkdef.h)

#Users edit the following lines replacing exampleLoop with the name of their binary / code
#The binary is built in the ./build directory
#alternatively use your own Makefiles

#add_executable(testAraDisplay testAraDisplay.cxx)
#target_link_libraries(testAraDisplay ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(nchnlFilter nchnlFilter.cxx)
#target_link_libraries(nchnlFilter ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(nchnlFilter_op nchnlFilter_op.cxx)
#target_link_libraries(nchnlFilter_op ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(rootHistoUpdateTest rootHistoUpdateTest.cxx)
#target_link_libraries(rootHistoUpdateTest ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

add_executable(nchnlAnalysis nchnlAnalysis.cxx)
target_link_libraries(nchnlAnalysis ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(smartFilterCheck smartFilterCheck.cxx)
#target_link_libraries(smartFilterCheck ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(nchnlPassRateAnalysis nchnlPassRateAnalysis.cxx)
#target_link_libraries(nchnlPassRateAnalysis ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(nchnlFilterCheck nchnlFilterCheck.cxx)
#target_link_libraries(nchnlFilterCheck ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(reducedTregFilter reducedTregFilter.cxx)
#target_link_libraries(reducedTregFilter ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(tregFilter tregFilter.cxx)
#target_link_libraries(tregFilter ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})


#add_executable(tChainTest tChainTest.cxx)
#target_link_libraries(tChainTest ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

add_executable(antennaInfo antennaInfo.cxx)
target_link_libraries(antennaInfo ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(testHeader testHeader.cxx)
#target_link_libraries(testHeader ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

add_executable(wf_plotter wf_plotter.cxx)
target_link_libraries(wf_plotter ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

add_executable(countRunTrigger countRunTrigger.cxx)
target_link_libraries(countRunTrigger ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

add_executable(resultCollector resultCollector.cxx)
target_link_libraries(resultCollector ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

add_executable(fitReferenceMap fitReferenceMap.cxx)
target_link_libraries(fitReferenceMap ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

#add_executable(plotFFT plotFFT.cxx)
#target_link_libraries(plotFFT ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(wfQuality_nchnl wfQuality_nchnl.cxx)
#target_link_libraries(wfQuality_nchnl ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(wfQuality_checkMean wfQuality_checkMean.cxx)
#target_link_libraries(wfQuality_checkMean ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(wfQuality_checkMeanOverTime wfQuality_checkMeanOverTime.cxx)
#target_link_libraries(wfQuality_checkMeanOverTime ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(wfQuality_checkRMSOverTime wfQuality_checkRMSOverTime.cxx)
#target_link_libraries(wfQuality_checkRMSOverTime ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(analysis analysis.cxx)
#target_link_libraries(analysis ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(getRunInfo getRunInfo.cxx)
#target_link_libraries(getRunInfo ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(example_app example_app.cxx)
#target_link_libraries(example_app ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform beamform.cxx)
#target_link_libraries(beamform ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky beamform_allsky.cxx)
#target_link_libraries(beamform_allsky ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_memMng beamform_allsky_memMng.cxx)
#target_link_libraries(beamform_allsky_memMng ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_time beamform_allsky_time.cxx)
#target_link_libraries(beamform_allsky_time ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_FFT beamform_allsky_FFT.cxx)
#target_link_libraries(beamform_allsky_FFT ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_FFTforbac beamform_allsky_FFTforbac.cxx)
#target_link_libraries(beamform_allsky_FFTforbac ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_FFTplanar beamform_allsky_FFTplanar.cxx)
#target_link_libraries(beamform_allsky_FFTplanar ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_FFTplanar_radioSpline beamform_allsky_FFTplanar_radioSpline.cxx)
#target_link_libraries(beamform_allsky_FFTplanar_radioSpline ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_FFTplanar_radioSpline_memMng beamform_allsky_FFTplanar_radioSpline_memMng.cxx)
#target_link_libraries(beamform_allsky_FFTplanar_radioSpline_memMng ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(beamform_allsky_FFTplanar_radioSpline_memMng_Healpix beamform_allsky_FFTplanar_radioSpline_memMng_Healpix.cxx)
#target_link_libraries(beamform_allsky_FFTplanar_radioSpline_memMng_Healpix
#${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

#add_executable(reco_clean reco_clean.cxx)
#target_link_libraries(reco_clean ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

#add_executable(reco_clean_xCorr reco_clean_xCorr.cxx)
#target_link_libraries(reco_clean_xCorr ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

##
#add_executable(analysis analysis.cxx)
#target_link_libraries(analysis ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

#add_executable(analysis_test analysis_test.cxx)
#target_link_libraries(analysis_test ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})
##
#add_executable(analysis_3D analysis_3D.cxx)
#target_link_libraries(analysis_3D ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})
##
#add_executable(analysis_3D_2 analysis_3D_2.cxx)
#target_link_libraries(analysis_3D_2 ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})
##
#add_executable(analysis_3D_clean analysis_3D_clean.cxx)
#target_link_libraries(analysis_3D_clean ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

add_executable(analysis analysis.cxx)
target_link_libraries(analysis ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

add_executable(nchnlFilter_loopThres nchnlFilter_loopThres.cxx)
target_link_libraries(nchnlFilter_loopThres ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

#add_executable(analysis_time analysis_time.cxx)
#target_link_libraries(analysis_time ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})

add_executable(plotAraGeom plotAraGeom.cxx)
target_link_libraries(plotAraGeom ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

add_executable(getCalpulserDelays getCalpulserDelays.cxx)
target_link_libraries(getCalpulserDelays ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs} ${HealpixLibs})


#add_executable(clFFT_test clFFT_test.cxx)
#target_link_libraries(clFFT_test ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(clFFT_test2 clFFT_test2.cxx)
#target_link_libraries(clFFT_test2 ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

add_executable(clFFT_test3 clFFT_test3.cxx)
target_link_libraries(clFFT_test3 ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(clFFT_test4 clFFT_test4.cxx)
#target_link_libraries(clFFT_test4 ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES} ${ExtraLibs})

#add_executable(wfQuality wfQuality.cxx)
#target_link_libraries(wfQuality ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(HksensorTB_temp HksensorTB_temp.cxx)
#target_link_libraries(HksensorTB_temp ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(Hksensor_temp Hksensor_temp.cxx)
#target_link_libraries(Hksensor_temp ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})

#add_executable(exampleLoop exampleLoop.cxx)
#target_link_libraries(exampleLoop ${ARAEVENT_LIBRARIES} ${ROOT_LIBRARIES} ${ZLIB_LIBRARIES})
